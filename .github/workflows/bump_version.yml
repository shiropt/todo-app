name: bump_version

on:
  workflow_dispatch:
    inputs:
      version:
        description: リリースを作るバージョン番号
        required: true
        default: ""

permissions:
  contents: write
  pull-requests: write

jobs:
  bump_version:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.PAT }}

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: update version
        run: |
          yarn version --new-version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: push branch to remote
        run: |
          git checkout -b feat/bump-to-${{ github.event.inputs.version }}
          git push origin feat/bump-to-${{ github.event.inputs.version }}

      - name: create version up PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT }}
          branch: feat/bump-to-${{ github.event.inputs.version }}
          title: "Bump to ${{ github.event.inputs.version }}"
          body: "Bump to ${{ github.event.inputs.version }}"
          base: master

      - name: Create Git tag
        run: |
          git tag v${{ github.event.inputs.version }}
          git push origin v${{ github.event.inputs.version }}
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: v${{ github.event.inputs.version }}
          body: |
            自動生成されたリリースノートです。
            - バージョン: v${{ github.event.inputs.version }}
            - 作成者: ${{ github.actor }}
            - name: Install GitHub CLI
            run: |
              curl -fsSL https://cli.github.com/install.sh | sh
              echo "$HOME/.gh/bin" >> $GITHUB_PATH

      - name: Get previous tag
        id: get-prev-tag
        run: |
          prev=$(git tag --sort=-creatordate | grep '^v' | head -n 2 | tail -n 1)
          echo "prev_tag=$prev" >> $GITHUB_OUTPUT

          - name: Generate changelog from merged PRs
            id: changelog
            run: |
              PREV_TAG="${{ steps.get-prev-tag.outputs.prev_tag }}"
              if [ -z "$PREV_TAG" ]; then
                echo "changelog=初回リリース" >> $GITHUB_OUTPUT
              else
                log=$(
                  gh pr list \
                    --state merged \
                    --search "merged:>$(git log -1 --format=%cI $PREV_TAG)" \
                    --json title,number,author \
                    --jq '.[] | "- \(.title) (#\(.number)) by @\(.author.login)"'
                )
                echo "changelog<<EOF" >> $GITHUB_OUTPUT
                echo "$log" >> $GITHUB_OUTPUT
                echo "EOF" >> $GITHUB_OUTPUT
              fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: v${{ github.event.inputs.version }}
          body: |
            自動生成されたリリースノートです。
            - バージョン: v${{ github.event.inputs.version }}
            - 作成者: ${{ github.actor }}
            ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
